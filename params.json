{
  "name": "Simple-bitbucket-commit-checker",
  "tagline": "Simple, and easy to use, commit checker for Atlassian Stash",
  "body": "# Simple Bitbucket Commit Checker [![Build Status](https://travis-ci.org/tomasbjerre/simple-bitbucket-commit-checker.svg?branch=master)](https://travis-ci.org/tomasbjerre/simple-bitbucket-commit-checker)\r\nSimple, and easy to use, commit checker for Atlassian Bitbucket. There are many commit checkers out there. This plugin aims at being simple and user friendly. The admin GUI ([here](https://raw.githubusercontent.com/tomasbjerre/simple-bitbucket-commit-checker/master/sandbox/admin_upper.png) and [here](https://raw.githubusercontent.com/tomasbjerre/simple-bitbucket-commit-checker/master/sandbox/admin_lower.png)) allows the Bitbucket administrator to add custom messages for each rejection reason. [Here](https://github.com/tomasbjerre/simple-bitbucket-commit-checker/blob/master/src/test/resources/testProdThatRejectResponseLooksGood.txt) is a sample reject message and [here](https://github.com/tomasbjerre/simple-bitbucket-commit-checker/blob/master/src/test/resources/testProdThatSuccessResponseLooksGood.txt) is a sample accept message. [This](https://raw.githubusercontent.com/tomasbjerre/simple-bitbucket-commit-checker/master/sandbox/config_and_reject.png) is a screenshot of a push being rejected.\r\n\r\nAvailable in [Atlassian Marketplace](https://marketplace.atlassian.com/plugins/se.bjurr.sscc.sscc).\r\n\r\n## Features\r\n* Check author in commit\r\n * email is same as users email in Bitbucket.\r\n * name is same as users name in Bitbucket.\r\n* Check that author name, and/or email, in commit exists for any user in Bitbucket\r\n* Check committer in commit\r\n * email is same as users email in Bitbucket.\r\n * name is same as users name in Bitbucket.\r\n* Optionally check author email against regular expression instead of equality to email in Bitbucket. Like:\r\n * ^${BITBUCKET_USER}@.*\r\n * ^[^@]*@company.domain$\r\n* Check that changed content does not match a specific regexp, like unresolved merge.\r\n* Check size of commits, so that large files don't accidently gets pushed.\r\n* Check JQL query. Can be used to check that any JIRA is in a specific state. There is an extra variable, ${REGEXP}, available for use in the query.\r\n * Example: issue = ${REGEXP} AND status = \"In Progress\" AND assignee in (\"${BITBUCKET_USER}\")\r\n* Simple configuration of rules that must apply to commit messages. Organized in groups.\r\n * A group can be used for matching, for example, issues. It can state that \"at least one\", \"all of\" or \"none\" of the issues can be mentioned in the commit messages.\r\n * Rules are added to the group. A rule can, for example, define Jira as a regular expression and the name \"Jira\".\r\n * If a group matches a commit, it can reject it or just show a message to the comitter.\r\n* Check only branches matching a regular expression.\r\n* Check that branch name matches specific regexp.\r\n* Exclude merge commits.\r\n* Exclude tag commits.\r\n* Check commits in pull requests\r\n* Show a general reject message.\r\n* Show a general accept message.\r\n* Optionally accept all commits from [service users](https://developer.atlassian.com/static/javadoc/bitbucket-server/4.0.3/api/reference/com/atlassian/bitbucket/user/UserType.html).\r\n* Optionally accept all commits if pattern matches the username. Checks will be ignored for user if pattern matches its name, like ^BATCH.* will ignore users with name starting with BATCH.\r\n* Dry run mode, where all commits are accepted. But verification results are shown.\r\n* Supporting variables to be used in error messages and checks.\r\n * BITBUCKET_EMAIL, Email of user in Bitbucket.\r\n * BITBUCKET_NAME Name of user in Bitbucket.\r\n * COMMITTER_EMAIL, Email of committer name.\r\n * COMMITTER_NAME, Name of committer email.\r\n * AUTHOR_EMAIL, Email of author email.\r\n * AUTHOR_NAME, Name of author name.\r\n * BITBUCKET_USER, Username of user in Bitbucket.\r\n\r\nThe plugin is configured on repository level, where all hooks are configured. If you want to configure it once for all repos, have a look at [Settings Synchronizer for Bitbucket](https://github.com/tomasbjerre/settings-synchronizer-for-bitbucket-plugin).\r\n\r\n## Design goals\r\nThe included features should:\r\n\r\n* Be easy to configure as an administrator of Bitbucket. Any rejection reason delivered to the committer should be configurable.\r\n* Be easy to use as a committer. With user friendly rejection messages, that clearly explains what was wrong and how to fix it.\r\n\r\n## Developer instructions\r\nYou will need Atlas SDK to compile the code.\r\n\r\nhttps://developer.atlassian.com/docs/getting-started/set-up-the-atlassian-plugin-sdk-and-build-a-project\r\n\r\nYou can generate Eclipse project:\r\n```\r\natlas-compile eclipse:eclipse\r\n```\r\n\r\nPackage the plugin:\r\n```\r\natlas-package\r\n```\r\n\r\nRun Bitbucket, with the plugin, on localhost:\r\n```\r\nexport MAVEN_OPTS=-Dplugin.resource.directories=`pwd`/src/main/resources\r\nmvn bitbucket:run\r\n```\r\n\r\nYou can also remote debug on port 5005 with:\r\n```\r\natlas-debug\r\n```\r\n\r\nMake a release:\r\n\r\nhttps://developer.atlassian.com/docs/common-coding-tasks/development-cycle/packaging-and-releasing-your-plugin\r\n```\r\nmvn release:prepare\r\nmvn release:perform\r\n```\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}